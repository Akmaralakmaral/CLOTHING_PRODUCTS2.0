@model List<CLOTHING_PRODUCTS.Models.Ingredient>

@{
    ViewData["Title"] = "Ingredient Page";
}

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm("ActionName", "ControяllerName", FormMethod.Post, new { id = "ingredientForm" }))
{
    <div class="form-group">
        <label for="productList">Select Product:</label>
        @Html.DropDownList("ProductId", (SelectList)ViewData["Products"], new { @class = "form-control", id = "productList", onchange = "updateForm()" })
    </div>

    <div id="formContainer" style="display:none;">
        <!-- Your form content goes here -->
    </div>

   
}

<button onclick="refreshPage()" class="btn btn-secondary">Refresh</button>
<script>
    function updateForm() {
        var productId = $("#productList").val();

        // Make an AJAX call to get the details for the selected product
        $.get("/Ingredient/GetProductDetails?productId=" + productId, function (data) {
            $("#formContainer").html(data);
            $("#formContainer").show();
        });

       
    }

    function refreshPage() {
        location.reload();
    }
</script>


<script>
    function updateForm() {
        var productId = $("#productList").val();

        // Make an AJAX call to get the details for the selected product
        $.get("/Ingredient/GetProductDetails?productId=" + productId, function (data) {
            $("#formContainer").html(data);
            $("#formContainer").show();
        });

        // Set the selectedProductId in the URL for the Create action
        var createUrl = "/Ingredient/Create?selectedProductId=" + productId;
        $("a.btn.btn-primary").attr("href", createUrl);
    }
</script>


@*<a asp-action="Create" class="btn btn-primary">Create New Ingredient</a>*@

<a asp-action="Create" asp-route-selectedFinishedProductId="selectedProductId" class="btn btn-primary">Create New Ingredient</a>
